{"version":3,"sources":["components/AddContact/styles.module.scss","components/Contacts/styles.module.scss","redux/actions.js","components/AddContact/AddContact.jsx","components/Contacts/FindContacts.jsx","components/Contacts/ContactsList.jsx","components/Contacts/Contacts.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","AddContact","state","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onSubmit","reset","className","styles","form","this","label","type","placeholder","pattern","title","required","onChange","input","button","Component","connect","dispatch","data","actions","FindContacts","onInput","autoComplete","contacts","filter","ContactsList","onDelete","map","contact","onClick","items","toLocaleLowerCase","includes","Contacts","App","addNewContact","changeFilter","persistConfig","key","storage","createReducer","_","contactsReducer","combineReducers","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9bb0fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__qX-0Z\",\"label\":\"styles_label__fXsBU\",\"button\":\"styles_button__KXuTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__vXayP\",\"contacts\":\"styles_contacts__Cpb8x\",\"contact\":\"styles_contact__9tAnB\",\"button\":\"styles_button__1BM8c\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport * as actions from '../../redux/actions';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"John Doe\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            placeholder=\"+38...\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(actions.addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContact);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport * as actions from '../../redux/actions';\r\n\r\nexport class FindContacts extends Component {\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          value={value}\r\n          required\r\n          onInput={onChange}\r\n          className={styles.input}\r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target }) => dispatch(actions.filterContact(target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContacts);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport * as actions from '../../redux/actions';\r\n\r\nexport class ContactsList extends Component {\r\n  render() {\r\n    const { contacts, onDelete } = this.props;\r\n\r\n    return (\r\n      <ul className={styles.contacts}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id} className={styles.contact}>\r\n              <span>{name}</span>\r\n              <span>{number}</span>\r\n              <button className={styles.button} onClick={() => onDelete(id)}>\r\n                X\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.items.filter(\r\n    ({ name, number }) =>\r\n      name.toLocaleLowerCase().includes(contacts.filter.toLocaleLowerCase()) ||\r\n      number.includes(contacts.filter),\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { Component } from 'react';\r\nimport FindContacts from './FindContacts';\r\nimport ContactsList from './ContactsList';\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <FindContacts />\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import { Component } from 'react';\r\nimport AddContact from './components/AddContact';\r\nimport Contacts from './components/Contacts';\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <div className=\"container\">\r\n          <AddContact onSubmit={this.addNewContact} />\r\n          <Contacts\r\n            onChange={this.changeFilter}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  configureStore,\r\n  createReducer,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as actions from './actions';\r\n\r\nconst persistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}